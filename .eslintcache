[{"/home/bryant/northcoders/steves-awesome-news-app/src/index.js":"1","/home/bryant/northcoders/steves-awesome-news-app/src/App.js":"2","/home/bryant/northcoders/steves-awesome-news-app/src/components/Header.jsx":"3","/home/bryant/northcoders/steves-awesome-news-app/src/api.js":"4","/home/bryant/northcoders/steves-awesome-news-app/src/components/ArticlesList.jsx":"5","/home/bryant/northcoders/steves-awesome-news-app/src/components/Nav.jsx":"6","/home/bryant/northcoders/steves-awesome-news-app/src/components/SingleArticle.jsx":"7","/home/bryant/northcoders/steves-awesome-news-app/src/components/ErrorMessage.jsx":"8","/home/bryant/northcoders/steves-awesome-news-app/src/components/Loading.jsx":"9","/home/bryant/northcoders/steves-awesome-news-app/src/components/Voter.jsx":"10","/home/bryant/northcoders/steves-awesome-news-app/src/components/Comments.jsx":"11"},{"size":219,"mtime":1607591508247,"results":"12","hashOfConfig":"13"},{"size":764,"mtime":1607599138798,"results":"14","hashOfConfig":"13"},{"size":277,"mtime":1607356743573,"results":"15","hashOfConfig":"13"},{"size":971,"mtime":1607603657238,"results":"16","hashOfConfig":"13"},{"size":1293,"mtime":1607604818536,"results":"17","hashOfConfig":"13"},{"size":1262,"mtime":1607604173013,"results":"18","hashOfConfig":"13"},{"size":1971,"mtime":1607605030014,"results":"19","hashOfConfig":"13"},{"size":192,"mtime":1607591965703,"results":"20","hashOfConfig":"13"},{"size":165,"mtime":1607591638854,"results":"21","hashOfConfig":"13"},{"size":645,"mtime":1607602701384,"results":"22","hashOfConfig":"13"},{"size":1220,"mtime":1607604337947,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"yaoqy9",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"26"},"/home/bryant/northcoders/steves-awesome-news-app/src/index.js",[],["48","49"],"/home/bryant/northcoders/steves-awesome-news-app/src/App.js",[],"/home/bryant/northcoders/steves-awesome-news-app/src/components/Header.jsx",[],"/home/bryant/northcoders/steves-awesome-news-app/src/api.js",[],"/home/bryant/northcoders/steves-awesome-news-app/src/components/ArticlesList.jsx",[],"/home/bryant/northcoders/steves-awesome-news-app/src/components/Nav.jsx",[],"/home/bryant/northcoders/steves-awesome-news-app/src/components/SingleArticle.jsx",["50","51"],"/home/bryant/northcoders/steves-awesome-news-app/src/components/ErrorMessage.jsx",[],"/home/bryant/northcoders/steves-awesome-news-app/src/components/Loading.jsx",[],"/home/bryant/northcoders/steves-awesome-news-app/src/components/Voter.jsx",[],"/home/bryant/northcoders/steves-awesome-news-app/src/components/Comments.jsx",["52"],"import React, { Component } from \"react\";\nimport Loading from \"./Loading\";\nimport ErrorMessage from \"./ErrorMessage\";\nimport { getCommentsByArticleId } from \"../api\";\n\nclass Comments extends Component {\n  state = {\n    comments: {},\n    isLoading: true,\n    hasError: false,\n    errorMessage: \"\",\n  };\n\n  componentDidMount() {\n    getCommentsByArticleId(this.props.article_id)\n      .then((comments) => {\n        this.setState({ comments, isLoading: false });\n      })\n      .catch((error) => {\n        const {\n          response: { status },\n        } = error;\n        this.setState({\n          hasError: true,\n          isLoading: false,\n          errorMessage: `Comments not found...${status}!`,\n        });\n      });\n  }\n\n  render() {\n    const { comments, hasError, errorMessage, isLoading } = this.state;\n    if (isLoading) {\n      return <Loading />;\n    } else if (hasError) {\n      return <p>{errorMessage}</p>;\n    } else {\n      return (\n        <main>\n          {comments.map((comment) => (\n            <p>{comment.body}</p>\n            // <li key={comment.body}>\n\n            //     <h2>{article.title}</h2>\n\n            // </li>\n          ))}\n        </main>\n      );\n    }\n  }\n}\n\nexport default Comments;\n",{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":5,"column":8,"nodeType":"59","messageId":"60","endLine":5,"endColumn":20},{"ruleId":"57","severity":1,"message":"61","line":35,"column":21,"nodeType":"59","messageId":"60","endLine":35,"endColumn":27},{"ruleId":"57","severity":1,"message":"58","line":3,"column":8,"nodeType":"59","messageId":"60","endLine":3,"endColumn":20},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"no-unused-vars","'ErrorMessage' is defined but never used.","Identifier","unusedVar","'status' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]